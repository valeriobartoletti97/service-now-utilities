<!-- HTML -->

<div class="w-100 d-flex justify-content-md-between justify-content-center align-items-center main-pokemon-wrapper">
  
<!-- your widget template -->
  
  <div class="col-12 col-md-3 d-flex flex-column gap-3 align-items-center main-stats-before">
    <!-- STATS -->
    <span class="text-center text-uppercase  stats-badge bg-lime-green">HP {{c.pokemonSelected.hp}}</span>
    <span class="text-center text-uppercase stats-badge bg-ut-orange">ATTACK {{c.pokemonSelected.attack}}</span>
    <span class="text-center text-uppercase stats-badge bg-yellow-green ">DEFENSE {{c.pokemonSelected.defense}}</span>
    <span class="text-center text-uppercase stats-badge bg-orange-pantone">SP.ATK {{c.pokemonSelected.specialAttack}}</span>
    <span class="text-center text-uppercase stats-badge bg-gold">SP.DEF {{c.pokemonSelected.specialDefense}}</span>
    <span class="text-center text-uppercase stats-badge bg-my-blue ">SPEED {{c.pokemonSelected.speed}}</span>

  </div>


  <div class="col-5 d-flex justify-content-center mt-1 big-pokemon-container">
    <div class="img-wrapper">
      <img class="pokemon-img" alt="{{c.pokemonSelected.name}}" src="{{c.pokemonSelected.image}}"/>
    </div>

  </div>



  <!-- BADGES TYPE -->
  <div class="col-5 col-md-3 types-before mt-5 mt-md-0">
    <div class="d-flex flex-column align-items-center gap-2 badge-type z-index-100" ng-if="c.pokemonSelected.isNotSingleType === true">
      <span class="text-center primary-type text-uppercase">{{c.pokemonSelected.type[0]}}</span>
      <span class="text-center secondary-type text-uppercase">{{c.pokemonSelected.type[1]}}</span>
    </div> 
    <div class="d-flex flex-column align-items-center gap-2 badge-type z-index-100" ng-if="c.pokemonSelected.isNotSingleType === false">
      <span class="text-center primary-type text-uppercase">{{c.pokemonSelected.type}}</span>
    </div> 
  </div>

</div>

    <!-- BEFORE MD-DISPLAY -->


<div class="row mt-5 mb-4">
    <!-- STATS -->
   <div class="col-6 d-flex flex-column gap-1 align-items-center main-stats-after d-none">
    <span class="text-center text-uppercase  stats-badge bg-lime-green">HP {{c.pokemonSelected.hp}}</span>
    <span class="text-center text-uppercase stats-badge bg-ut-orange">ATTACK {{c.pokemonSelected.attack}}</span>
    <span class="text-center text-uppercase stats-badge bg-yellow-green ">DEFENSE {{c.pokemonSelected.defense}}</span>
    <span class="text-center text-uppercase stats-badge bg-orange-pantone">SP.ATK {{c.pokemonSelected.specialAttack}}</span>
    <span class="text-center text-uppercase stats-badge bg-gold">SP.DEF {{c.pokemonSelected.specialDefense}}</span>
    <span class="text-center text-uppercase stats-badge bg-my-blue ">SPEED {{c.pokemonSelected.speed}}</span>
  </div>
  
  
  <!-- BADGES -->
  <div class="col-6 types-after d-none d-flex justify-content-center align-items-center">
    <div class="d-flex flex-column align-items-center gap-2 badge-type z-index-100" ng-if="c.pokemonSelected.isNotSingleType === true">
      <span class="text-center primary-type text-uppercase">{{c.pokemonSelected.type[0]}}</span>
      <span class="text-center secondary-type text-uppercase">{{c.pokemonSelected.type[1]}}</span>
    </div> 
    <div class="d-flex flex-column align-items-center gap-2 badge-type z-index-100" ng-if="c.pokemonSelected.isNotSingleType === false">
      <span class="text-center primary-type text-uppercase">{{c.pokemonSelected.type}}</span>
    </div> 
  </div>
</div>



<!-- CSS -->

$secondary: rgba(255, 187, 104, 1) !default;
$primary: rgba(208, 187, 243, 1) !default;
$accessory: rgba(162, 133, 217, 1) !default;
$selected: rgba(255, 172, 4, 1) !default;
$background: rgba(253, 255, 254, 1) !default;
$orange-pantone: rgba(255, 92, 20, 1) !default;
$ut-orange: rgba(255, 138, 27, 1) !default;
$gold: rgba(252, 213, 20, 1) !default;
$yellow-green: rgba(152, 218, 0, 1) !default;
$lime-green: rgba(31, 210, 36, 1) !default;
$my-blue: rgba(0, 115, 204) !default;



.active{
  background-color:$selected;
}
.bg-orange-pantone{
  background-color: $orange-pantone;
}
.bg-ut-orange{
  background-color: $ut-orange;
}
.bg-gold{
  background-color: $gold;
}
.bg-yellow-green{
  background-color: $yellow-green;
}
.bg-lime-green{
  background-color: $lime-green;
}
.bg-my-blue{
  background-color: $my-blue
}
.pokemon-img{
  width:100%;
    height:100%;
    object-fit:cover;
  transition: 0.4s;
  -webkit-filter:  drop-shadow(8px 8px 10px black) !important;
  filter: drop-shadow(8px 8px 10px gray) !important;
}
.img-wrapper{
  width:370px;
}
.pokemon-img:hover,.stats-badge:hover{
    transform: scale(1.1);
    cursor:pointer;
    transition: 0.4s;
}
.primary-type, .secondary-type{
    border-radius: 5px;
    padding: 5px;
    border: 1px solid black;
    width:120px;
}
.stats-badge{
    border-radius: 5px;
    padding: 5px;
    border: 1px solid black;
    width:200px;
}
.primary-type{
    background-color: rgba(255, 255, 255, 0.5);
}
.secondary-type{
    background-color: rgba(255, 255, 255, 0.5);
}
.card-img,.stats-badge{
  transition: 0.4s;
  -webkit-filter:  drop-shadow(2px 2px 3px black) !important;
  filter: drop-shadow(2px 2px 3px gray) !important;
}
.main-stats-after{
  display: none;
}

@media screen and (max-width: 900px) {
  .main-pokemon-description{
    inline-size: 200px;
  }
  .card-img-wrapper{
    display:none !important
  }
  .main-stats-before{
    display: none !important;
  }
  .main-stats-after{
    display: flex !important;
  }
  .types-before{
    display: none !important;
  }
  .types-after{
    display: flex !important;
  }
  .main-pokemon-wrapper{
    justify-content: center !important
  }
}
@media screen and (max-width: 470px){
  .stats-badge{
    border-radius: 5px;
    padding: 5px;
    border: 1px solid black;
    width:150px;
}
}



<!-- SERVER SCRIPT -->




<!-- CLIENT CONTROLLER -->


api.controller=function($rootScope, $scope) {
  /* widget controller */
  var c = this;
  c.pokemons = $rootScope.pokemons;
  c.pokemonSelected = $rootScope.pokemonSelected
  //console.log("Pokemons:" + c.pokemons)
  $scope.$on("selected_pokemon",  function(e,data){
	c.pokemonSelected = data;
	
  })
};
